// Generated by https://quicktype.io

import 'package:flutter/rendering.dart';
import 'package:flutter/material.dart';

class Movies {
  List<Movie> items = [];
  Movies();
  Movies.fromJsonMap(List<dynamic> jsonList, String callFrom) {
    jsonList.forEach((x) {
      items.add(Movie.fromJsonMap(x, callFrom));
    });
  }
}

class Movie {
  double? popularity;
  int? voteCount;
  bool? video;
  String? posterPath;
  int? id;
  String? idHero;
  bool? adult;
  String? backdropPath;
  String? originalLanguage;
  String? originalTitle;
  List<int>? genreIds;
  String? title;
  double? voteAverage;
  String? overview;
  String? releaseDate;
  dynamic? belongsToCollection;
  String? imdbId;
  int? budget;
  String? homepage;
  int? revenue;
  int? runtime;
  String? status;
  String? tagline;

  Movie({
    this.voteCount,
    this.popularity,
    this.video,
    this.posterPath,
    this.id,
    this.idHero,
    this.adult,
    this.backdropPath,
    this.originalLanguage,
    this.originalTitle,
    this.genreIds,
    this.title,
    this.voteAverage,
    this.overview,
    this.releaseDate,
    this.belongsToCollection,
    this.imdbId,
    this.budget,
    this.homepage,
    this.revenue,
    this.runtime,
    this.status,
    this.tagline,
  });

  Movie.fromJsonMap(Map<String, dynamic> json, String callFrom) {
    voteCount = json['vote_count'];
    popularity = json['popularity'] != null ? json['popularity'] / 1 : 0;
    video = json['video'];
    posterPath = json['poster_path'];
    id = json['id'];
    idHero = 'MV_${json['id']}_$callFrom';
    adult = json['adult'];
    backdropPath = json['backdrop_path'];
    originalLanguage = json['original_language'];
    originalTitle = json['original_title'];
    genreIds = json['genre_ids'] != null ? json['genre_ids'].cast<int>() : [];
    title = json['title'];
    voteAverage =
        (!json.keys.contains('vote_average')) ? 0.0 : json['vote_average'] / 1;
    overview = json['overview'];
    releaseDate = json['release_date'];
    belongsToCollection = json['belongsToCollection'];
    imdbId = json['imdb_id'];
    budget = json['budget'] != null ? json['budget'] : 0;
    homepage = json['homepage'];
    revenue = json['revenue'];
    runtime = json['runtime'];
    status = json['status'];
    tagline = json['tagline'];
  }

  String getPosterImgUrl() {
    final res = (posterPath == null)
        ? 'https://www.digopaul.com/wp-content/uploads/related_images/2015/09/08/placeholder_2.jpg'
        : 'https://image.tmdb.org/t/p/w500/$posterPath';
    return res;
  }

  NetworkImage getPosterImg() => NetworkImage(getPosterImgUrl());

  String getPosterImgSmallUrl() {
    final res = (posterPath == null)
        ? 'https://www.digopaul.com/wp-content/uploads/related_images/2015/09/08/placeholder_2.jpg'
        : 'https://image.tmdb.org/t/p/w200/$posterPath';
    return res;
  }

  NetworkImage getPosterSmallImg() => NetworkImage(getPosterImgSmallUrl());

  String getBackgroundImgUrl() {
    final res = (backdropPath == null)
        ? 'https://www.digopaul.com/wp-content/uploads/related_images/2015/09/08/placeholder_2.jpg'
        : 'https://image.tmdb.org/t/p/w500/$backdropPath';
    return res;
  }

  NetworkImage getBackgroundImg() => NetworkImage(getBackgroundImgUrl());
}
